import { useAuth } from 'react-oidc-context';
import { useRuntimeConfig } from './useRuntimeConfig';
import { useMemo } from 'react';

export interface GenerateStoryInput {
  playerName: string;
  genre: string;
  actions: { role: string; content: string }[];
}

export const useStoryAgent = () => {
  const { agentArn } = useRuntimeConfig();
  const region = agentArn.split(':')[3];
  const url = `https://bedrock-agentcore.${region}.amazonaws.com/runtimes/${encodeURIComponent(agentArn)}/invocations?qualifier=DEFAULT`;

  const { user } = useAuth();

  return useMemo(
    () => ({
      generateStory: async function* (
        opts: GenerateStoryInput,
      ): AsyncIterableIterator<string> {
        const response = await fetch(url, {
          headers: {
            Authorization: `Bearer ${user?.id_token}`,
            'Content-Type': 'application/json',
          },
          method: 'POST',
          body: JSON.stringify(opts),
        });

        const reader = response.body
          ?.pipeThrough(new TextDecoderStream())
          .getReader();

        if (!reader) return;

        while (true) {
          const { value, done } = await reader.read();

          if (done) return;
          yield value;
        }
      },
    }),
    [url, user?.id_token],
  );
};
