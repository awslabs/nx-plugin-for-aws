import * as cdk from 'aws-cdk-lib';
import { Construct } from 'constructs';
import {
  UserIdentity,
  Website,
  MyApi,
  MyApiHttp,
  PyApi,
  PyApiHttp,
  PyProjectMyFunction,
} from ':e2e-test/common-constructs';

export class ApplicationStack extends cdk.Stack {
  constructor(scope: Construct, id: string, props?: cdk.StackProps) {
    super(scope, id, props);
    const identity = new UserIdentity(this, 'UserIdentity');
    const myapi = new MyApi(this, 'MyApi', {
      integrations: MyApi.defaultIntegrations(this).build(),
    });
    myapi.grantInvokeAccess(identity.identityPool.authenticatedRole);
    const pyapi = new PyApi(this, 'PyApi', {
      integrations: PyApi.defaultIntegrations(this).build(),
    });
    pyapi.grantInvokeAccess(identity.identityPool.authenticatedRole);
    new Website(this, 'Website');
    new PyProjectMyFunction(this, 'MyFunction');
    new MyApiHttp(this, 'MyApiHttp', {
      integrations: MyApiHttp.defaultIntegrations(this).build(),
    });
    new PyApiHttp(this, 'PyApiHttp', {
      integrations: PyApiHttp.defaultIntegrations(this).build(),
    });
  }
}
