---
import { Badge } from '@astrojs/starlight/components';
const { schema } = Astro.props;
const locale = Astro.currentLocale || 'en';
const strings = {
  parameter: {
    en: 'Parameter',
    jp: 'パラメータ',
    ko: '매개변수',
    fr: 'Paramètre',
    it: 'Parametro',
    es: 'Parámetro',
    pt: 'Parâmetro',
    zh: '参数'
  },
  type: {
    en: 'Type',
    jp: '型',
    ko: '타입',
    fr: 'Type',
    it: 'Tipo',
    es: 'Tipo',
    pt: 'Tipo',
    zh: '类型'
  },
  default: {
    en: 'Default',
    jp: 'デフォルト',
    ko: '기본값',
    fr: 'Par défaut',
    it: 'Predefinito',
    es: 'Predeterminado',
    pt: 'Padrão',
    zh: '默认值'
  },
  description: {
    en: 'Description',
    jp: '説明',
    ko: '설명',
    fr: 'Description',
    it: 'Descrizione',
    es: 'Descripción',
    pt: 'Descrição',
    zh: '描述'
  },
  required: {
    en: 'Required',
    jp: '必須',
    ko: '필수',
    fr: 'Requis',
    it: 'Obbligatorio',
    es: 'Requerido',
    pt: 'Obrigatório',
    zh: '必需'
  },
};
const localeString = (name) => strings[name][locale] || strings[name]['en'];
---

<table>
  <tr>
    <th>{localeString('parameter')}</th>
    <th>{localeString('type')}</th>
    <th>{localeString('default')}</th>
    <th>{localeString('description')}</th>
  </tr>
  {
    Object.entries(schema.properties).map(([parameter, parameterSchema]) => (
      <tr>
        <td>{parameter} {(schema.required ?? []).includes(parameter) ? <Badge text={localeString('required')} variant="note" /> : null}</td>
        <td>{parameterSchema.type}</td>
        <td>{parameterSchema.default ?? '-'}</td>
        <td>{parameterSchema.description ?? '-'}</td>
      </tr>
    ))
  }
</table>
