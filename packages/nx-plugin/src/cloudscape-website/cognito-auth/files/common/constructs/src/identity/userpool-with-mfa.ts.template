/*! Copyright [Amazon.com](http://amazon.com/), Inc. or its affiliates. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0 */
import { PDKNag } from '@aws/pdk/pdk-nag';
import { Duration, Stack } from 'aws-cdk-lib';
import {
  AccountRecovery,
  AdvancedSecurityMode,
  Mfa,
  UserPool,
} from 'aws-cdk-lib/aws-cognito';
import { Construct } from 'constructs';

/**
 * Configures a UserPool with MFA across SMS/TOTP using sane defaults.
 */
export class UserPoolWithMfa extends UserPool {
  constructor(scope: Construct, id: string) {
    super(scope, id, {
      deletionProtection: true,
      passwordPolicy: {
        minLength: 8,
        requireLowercase: true,
        requireUppercase: true,
        requireDigits: true,
        requireSymbols: true,
        tempPasswordValidity: Duration.days(3),
      },
      mfa: Mfa.REQUIRED,
      mfaSecondFactor: { sms: true, otp: true },
      signInCaseSensitive: false,
      advancedSecurityMode: AdvancedSecurityMode.ENFORCED,
      signInAliases: { username: true, email: true },
      accountRecovery: AccountRecovery.EMAIL_ONLY,
      selfSignUpEnabled: <%= allowSignup %>,
      standardAttributes: {
        phoneNumber: { required: false },
        email: { required: true },
        givenName: { required: true },
        familyName: { required: true },
      },
      autoVerify: {
        email: true,
        phone: true,
      },
      keepOriginal: {
        email: true,
        phone: true,
      },
    });

    const stack = Stack.of(this);

    ['AwsSolutions-IAM5', 'AwsPrototyping-IAMNoWildcardPermissions'].forEach(
      (RuleId) => {
        PDKNag.addResourceSuppressionsByPathNoThrow(
          stack,
          `${PDKNag.getStackPrefix(stack)}${id}/UserPool/smsRole/Resource`,
          [
            {
              id: RuleId,
              reason:
                'MFA requires sending a text to a users phone number which cannot be known at deployment time.',
              appliesTo: ['Resource::*'],
            },
          ]
        );
      }
    );
  }
}
