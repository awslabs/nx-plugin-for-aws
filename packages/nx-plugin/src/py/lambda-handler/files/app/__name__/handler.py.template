import json

from aws_lambda_powertools.utilities.typing import LambdaContext
from aws_lambda_powertools import Logger, Metrics, Tracer

from .init import lambda_handler, logger, metrics, tracer

@tracer.capture_lambda_handler
@metrics.log_metrics
def lambda_handler(event: dict, context: LambdaContext):
    logger.info("Received event", extra={"event": event})
    metrics.add_metric(name="InvocationCount", unit="Count", value=1)

    try:
        result = { "message": "Success" }
        metrics.add_metric(name="SuccessCount", unit=MetricUnit.Count, value=1)
        return {
            "statusCode": 200,
            "body": json.dumps(result)
        }
    except Exception as e:
        logger.exception("Error processing event")
        metrics.add_metric(name="ErrorCount", unit="Count", value=1)
        return {
            "statusCode": 500,
            "body": json.dumps({"message": "Internal Server Error"})
        } 