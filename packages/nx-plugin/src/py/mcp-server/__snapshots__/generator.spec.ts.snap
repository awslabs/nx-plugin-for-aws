// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`py#mcp-server generator > should match snapshot for BedrockAgentCoreRuntime generated constructs files > agent-core-runtime.ts 1`] = `null`;

exports[`py#mcp-server generator > should match snapshot for BedrockAgentCoreRuntime generated constructs files > app-index.ts 1`] = `""`;

exports[`py#mcp-server generator > should match snapshot for BedrockAgentCoreRuntime generated constructs files > core-index.ts 1`] = `
"export * from './app.js';
export * from './runtime-config.js';
"
`;

exports[`py#mcp-server generator > should match snapshot for BedrockAgentCoreRuntime generated constructs files > mcp-server-construct.ts 1`] = `null`;

exports[`py#mcp-server generator > should match snapshot for BedrockAgentCoreRuntime generated constructs files > mcp-servers-index.ts 1`] = `null`;

exports[`py#mcp-server generator > should match snapshot for generated files > mcp-server-__init__.py 1`] = `""`;

exports[`py#mcp-server generator > should match snapshot for generated files > mcp-server-http.py 1`] = `
"from .server import mcp

if __name__ == "__main__":
    mcp.run(transport="streamable-http")
"
`;

exports[`py#mcp-server generator > should match snapshot for generated files > mcp-server-server.py 1`] = `
"from mcp.server.fastmcp import FastMCP

mcp = FastMCP(
    name="SnapshotServer",
    host="0.0.0.0",
    stateless_http=True,
)

@mcp.tool(description="Adds two numbers")
def add(a: int, b: int) -> int:
    """Add two numbers"""
    return a + b


@mcp.resource("example://context", description="Sample Guidance")
def sample_guidance() -> str:
    return """## Sample Guidance

This is some guidance in markdown format!"""
"
`;

exports[`py#mcp-server generator > should match snapshot for generated files > mcp-server-stdio.py 1`] = `
"from .server import mcp

if __name__ == "__main__":
    mcp.run(transport="stdio")
"
`;

exports[`py#mcp-server generator > should match snapshot for generated files > updated-pyproject.toml 1`] = `
"[project]
name = "proj.test_project"
version = "0.1.0"
dependencies = [
  "mcp==1.13.1",
  "boto3==1.40.20",
  "aws-opentelemetry-distro==0.12.0"
]

[dependency-groups]
dev = [ ]

[tool.uv]
dev-dependencies = [ ]
"
`;
