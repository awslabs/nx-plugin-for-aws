import { createContext, FC, PropsWithChildren, useMemo } from 'react';
import { use<%- apiNameClassName %>Client } from '../hooks/use<%- apiNameClassName %>Client';
import { <%- apiNameClassName %>OptionsProxy } from '../<%- generatedClientDir %>/options-proxy.gen';

export const <%- apiNameClassName %>Context = createContext<<%- apiNameClassName %>OptionsProxy | undefined>(undefined);

export const <%- apiNameClassName %>Provider: FC<PropsWithChildren> = ({ children }) => {
  const client = use<%- apiNameClassName %>Client();
  const optionsProxy = useMemo(() =>
    new <%- apiNameClassName %>OptionsProxy({ client })
  , [client]);

  return (
    <<%- apiNameClassName %>Context.Provider value={optionsProxy}>
      {children}
    </<%- apiNameClassName %>Context.Provider>
  );
};

export default <%- apiNameClassName %>Provider;
