---
title: <%- name %>
description: <%- description ?? 'TODO - A short description of your generator' %>
---

import { FileTree } from '@astrojs/starlight/components';
import RunGenerator from '@components/run-generator.astro';
import GeneratorParameters from '@components/generator-parameters.astro';
import Infrastructure from '@components/infrastructure.astro';
import Snippet from '@components/snippet.astro';

TODO: Add an overview of your generator here.

## Usage

### Generate a <%- name %>

You can generate a <%- name %> in two ways:

<RunGenerator generator="<%- name %>" />

### Options

<GeneratorParameters generator="<%- name %>" />

## Generator Output

The generator will create the following project files:

<FileTree>
 - todo.txt Update this section with what your generator generates!
</FileTree>

### Infrastructure

<Snippet name="shared-constructs" />

<Infrastructure>
<Fragment slot="cdk">
<FileTree>
  - packages/common/constructs/src
    - app
      - todo.txt document app specific cdk constructs if any
    - core
      - todo.txt document core cdk constructs if any
</FileTree>
</Fragment>
<Fragment slot="terraform">
<FileTree>
  - packages/common/terraform/src
    - app
      - todo.txt document app specific tf modules if any
    - core
      - todo.txt document core tf modules if any
</FileTree>
</Fragment>
</Infrastructure>

:::danger
Delete this section if your generator does not create infrastructure
:::

## TODO: More Docs!

Add more documentation detailing things like:

- How to work with the project/code you've generated
- What new project.json targets have been added and how to run them (using the NxCommands component)
- Best practices when working with your generated project/code

See the existing guides for concrete examples.
