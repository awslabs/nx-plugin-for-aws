import { Tree } from '@nx/devkit';
import { <%- nameCamelCase %>Generator, <%- nameUpperSnakeCase %>_GENERATOR_INFO } from './generator';
import { createTreeUsingTsSolutionSetup } from '<%- pathToProjectSourceRoot %>utils/test';
import { expectHasMetricTags } from '<%- pathToProjectSourceRoot %>utils/metrics.spec';
import { sharedConstructsGenerator } from '<%- pathToProjectSourceRoot %>utils/shared-constructs';

describe('<%- name %> generator', () => {
  let tree: Tree;

  beforeEach(() => {
    tree = createTreeUsingTsSolutionSetup();
  });

  it('should run successfully', async () => {
    await <%- nameCamelCase %>Generator(tree, { exampleOption: 'example' });

    // TODO: check the tree is updated as expected
  });

  it('should add generator metric to app.ts', async () => {
    await sharedConstructsGenerator(tree);

    await <%- nameCamelCase %>Generator(tree, { exampleOption: 'example' });

    expectHasMetricTags(tree, <%- nameUpperSnakeCase %>_GENERATOR_INFO.metric);
  });
});
