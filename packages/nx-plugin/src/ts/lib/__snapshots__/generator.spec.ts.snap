// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`ts lib generator > should configure named inputs in nx.json 1`] = `
"{
  "affected": {
    "defaultBase": "main"
  },
  "targetDefaults": {
    "build": {
      "cache": true,
      "inputs": ["default"]
    },
    "lint": {
      "cache": true,
      "configurations": {
        "fix": {
          "fix": true
        }
      },
      "inputs": [
        "default",
        "{workspaceRoot}/eslint.config.mjs",
        "{projectRoot}/eslint.config.mjs"
      ]
    },
    "@nx/eslint:lint": {
      "cache": true,
      "inputs": [
        "default",
        "{workspaceRoot}/.eslintrc.json",
        "{workspaceRoot}/.eslintignore",
        "{workspaceRoot}/eslint.config.mjs"
      ]
    },
    "@nx/vite:test": {
      "cache": true,
      "inputs": ["default", "^default"],
      "configurations": {
        "update-snapshot": {
          "args": "--update"
        }
      }
    },
    "test": {
      "dependsOn": ["^build"],
      "inputs": ["default"]
    },
    "compile": {
      "cache": true,
      "inputs": ["default"]
    }
  },
  "plugins": [
    {
      "plugin": "@nx/js/typescript",
      "options": {
        "typecheck": {
          "targetName": "typecheck"
        },
        "build": {
          "targetName": "compile",
          "configName": "tsconfig.lib.json",
          "buildDepsName": "build-deps",
          "watchDepsName": "watch-deps"
        }
      }
    },
    {
      "plugin": "@nx/eslint/plugin",
      "options": {
        "targetName": "lint"
      }
    }
  ],
  "namedInputs": {
    "default": [
      {
        "dependentTasksOutputFiles": "**/*",
        "transitive": true
      }
    ]
  }
}
"
`;

exports[`ts lib generator > should generate library with custom directory > custom-dir-index.ts 1`] = `
"export function hello() {
  return 'Hello!';
}
"
`;

exports[`ts lib generator > should generate library with custom directory > custom-dir-project.json 1`] = `
"{
  "name": "@proj/test-lib",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/test-lib/src",
  "projectType": "library",
  "tags": [],
  "targets": {
    "build": {
      "dependsOn": ["lint", "compile", "test"]
    },
    "compile": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/dist/libs/test-lib/tsc"],
      "options": {
        "command": "tsc --build tsconfig.lib.json",
        "cwd": "{projectRoot}"
      }
    },
    "test": {
      "executor": "@nx/vite:test",
      "outputs": ["{options.reportsDirectory}"],
      "options": {
        "reportsDirectory": "../../coverage/libs/test-lib"
      }
    }
  }
}
"
`;

exports[`ts lib generator > should generate library with custom directory > custom-dir-tsconfig.json 1`] = `
"{
  "extends": "../../tsconfig.base.json",
  "files": [],
  "include": [],
  "references": [
    {
      "path": "./tsconfig.lib.json"
    },
    {
      "path": "./tsconfig.spec.json"
    }
  ],
  "compilerOptions": {}
}
"
`;

exports[`ts lib generator > should generate library with default options > eslint.config.mjs 1`] = `
"import baseConfig from '../eslint.config.mjs';

export default [
  ...baseConfig,
  {
    files: ['**/*.json'],
    rules: {
      '@nx/dependency-checks': [
        'warn',
        {
          ignoredFiles: [
            '{projectRoot}/eslint.config.{js,cjs,mjs}',
            '{projectRoot}/vite.config.{js,ts,mjs,mts}',
          ],
        },
      ],
    },
    languageOptions: {
      parser: await import('jsonc-eslint-parser'),
    },
  },
];
"
`;

exports[`ts lib generator > should generate library with default options > index.ts 1`] = `
"export function hello() {
  return 'Hello!';
}
"
`;

exports[`ts lib generator > should generate library with default options > project.json 1`] = `
"{
  "name": "@proj/test-lib",
  "$schema": "../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "test-lib/src",
  "projectType": "library",
  "tags": [],
  "targets": {
    "build": {
      "dependsOn": ["lint", "compile", "test"]
    },
    "compile": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/dist/test-lib/tsc"],
      "options": {
        "command": "tsc --build tsconfig.lib.json",
        "cwd": "{projectRoot}"
      }
    },
    "test": {
      "executor": "@nx/vite:test",
      "outputs": ["{options.reportsDirectory}"],
      "options": {
        "reportsDirectory": "../coverage/test-lib"
      }
    }
  }
}
"
`;

exports[`ts lib generator > should generate library with default options > tsconfig.json 1`] = `
"{
  "extends": "../tsconfig.base.json",
  "files": [],
  "include": [],
  "references": [
    {
      "path": "./tsconfig.lib.json"
    },
    {
      "path": "./tsconfig.spec.json"
    }
  ],
  "compilerOptions": {}
}
"
`;

exports[`ts lib generator > should generate library with subdirectory > subdir-index.ts 1`] = `
"export function hello() {
  return 'Hello!';
}
"
`;

exports[`ts lib generator > should generate library with subdirectory > subdir-project.json 1`] = `
"{
  "name": "@proj/test-lib",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "feature/test-lib/src",
  "projectType": "library",
  "tags": [],
  "targets": {
    "build": {
      "dependsOn": ["lint", "compile", "test"]
    },
    "compile": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/dist/feature/test-lib/tsc"],
      "options": {
        "command": "tsc --build tsconfig.lib.json",
        "cwd": "{projectRoot}"
      }
    },
    "test": {
      "executor": "@nx/vite:test",
      "outputs": ["{options.reportsDirectory}"],
      "options": {
        "reportsDirectory": "../../coverage/feature/test-lib"
      }
    }
  }
}
"
`;

exports[`ts lib generator > should generate library with subdirectory > subdir-tsconfig.json 1`] = `
"{
  "extends": "../../tsconfig.base.json",
  "files": [],
  "include": [],
  "references": [
    {
      "path": "./tsconfig.lib.json"
    },
    {
      "path": "./tsconfig.spec.json"
    }
  ],
  "compilerOptions": {}
}
"
`;
