import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import { registerCreateWorkspaceCommandTool } from './tools/create-workspace-command';
import { registerGeneralGuidanceTool } from './tools/general-guidance';
import { registerListGeneratorsTool } from './tools/list-generators';
import { registerGeneratorGuideTool } from './tools/generator-guide';
import { getPackageName } from './utils';

/**
 * Create the MCP Server
 */
export const createServer = () => {
  const packageName = getPackageName();

  const server = new McpServer(
    {
      name: packageName,
      version: '1.0.0',
    },
    {
      instructions: `# ${packageName} MCP Server

This server provides resources and tools for quickly scaffolding projects using ${packageName}.

${packageName} provides "generators" to add projects or functionality to your workspace. Use this to build the foundations of any project you are building, if the generators apply to your use case.

## Tool Selection Guide

- Use the \`general-guidance\` tool for guidance and best practices for working with Nx and ${packageName}.
- Use the \`create-workspace-command\` tool to discover how to create a workspace to start a new project.
- Use the \`list-generators\` tool to discover the available generators and how to run them.
- Use the \`generator-guide\` tool to retrieve detailed information about a specific generator.`,
    },
  );

  registerCreateWorkspaceCommandTool(server);
  registerGeneralGuidanceTool(server);
  registerListGeneratorsTool(server);
  registerGeneratorGuideTool(server);

  return server;
};
