import { Construct } from 'constructs';
import { Effect, IRole, PolicyStatement } from 'aws-cdk-lib/aws-iam';
import { RuntimeConfig } from '../runtime-config/index.js';
import { Api as ApiConstruct, ApiProps as ApiConstructProps } from '<%= generatedInfrastructurePackage %>';

export interface <%= namePascalCase %>Props extends ApiConstructProps {

}

export class <%= namePascalCase %> extends ApiConstruct {
  constructor(scope: Construct, id: string, props: <%= namePascalCase %>Props) {
    super(scope, id, props);

    RuntimeConfig.ensure(this).config.typeSafeApis = {
      '<%= name %>': this.api.url!
    };
  }

  public grantInvokeAccess(role: IRole) {
    role.addToPrincipalPolicy(
      new PolicyStatement({
        effect: Effect.ALLOW,
        actions: ['execute-api:Invoke'],
        resources: [this.api.arnForExecuteApi('*', '/*', '*')],
      })
    );
  }
}
