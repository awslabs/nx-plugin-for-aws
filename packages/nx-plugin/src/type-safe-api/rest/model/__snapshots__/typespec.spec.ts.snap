// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`type-safe-api rest typespec model generator > should create and configure project.json > project.json 1`] = `
{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "metadata": {
    "apiName": "test-api",
  },
  "name": "test-api-model",
  "targets": {
    "build": {
      "cache": true,
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "tsp compile apis/test-api-model/src --config apis/test-api-model/tspconfig.yaml",
          "type-safe-api parse-openapi-spec --specPath dist/apis/test-api-model/openapi/@typespec/openapi3/openapi.json --outputPath apis/test-api-model/dist/spec.json",
        ],
        "parallel": false,
      },
    },
  },
}
`;

exports[`type-safe-api rest typespec model generator > should generate model files > errors.tsp 1`] = `
"import "@typespec/http";

using Http;

/**
 * An error at the fault of the client sending invalid input
 */
model BadRequestErrorResponseContent {
  /**
   * Message with details about the error
   */
  message: string;
}

/**
 * An internal failure at the fault of the server
 */
model InternalFailureErrorResponseContent {
  /**
   * Message with details about the error
   */
  message: string;
}

/**
 * An error due to the client not being authorized to access the resource
 */
model NotAuthorizedErrorResponseContent {
  /**
   * Message with details about the error
   */
  message: string;
}

/**
 * An error due to the client attempting to access a missing resource
 */
model NotFoundErrorResponseContent {
  /**
   * Message with details about the error
   */
  message: string;
}

/**
 * BadRequestError 400 response
 */
@error
model BadRequestError {
  @statusCode statusCode: 400;
  @body body: BadRequestErrorResponseContent;
}

/**
 * NotAuthorizedError 403 response
 */
@error
model NotAuthorizedError {
  @statusCode statusCode: 403;
  @body body: NotAuthorizedErrorResponseContent;
}

/**
 * NotFoundError 404 response
 */
@error
model NotFoundError {
  @statusCode statusCode: 404;
  @body body: NotFoundErrorResponseContent;
}

/**
 * InternalFailureError 500 response
 */
@error
model InternalFailureError {
  @statusCode statusCode: 500;
  @body body: InternalFailureErrorResponseContent;
}
"
`;

exports[`type-safe-api rest typespec model generator > should generate model files > handler.js 1`] = `
"import { $extension } from "@typespec/openapi";

export function $handler(context, target, value) {
  $extension(context, target, "x-handler", value);
}
"
`;

exports[`type-safe-api rest typespec model generator > should generate model files > handler.tsp 1`] = `
"import "./handler.js";

using TypeSpec.Reflection;

model HandlerOptions {
  language: "typescript"
}

extern dec handler(target: Operation, options: HandlerOptions);
"
`;

exports[`type-safe-api rest typespec model generator > should generate model files > main.tsp 1`] = `
"import "@typespec/http";
import "@typespec/openapi";
import "@typespec/openapi3";
import "./types/errors.tsp";
import "./decorators/handler.tsp";

using Http;
using OpenAPI;

/**
 * TestApi
 */
@service({ title: "TestApi" })
@info({ version: "1.0" })
namespace TestApi;

@get
@route("/hello")
@handler({ language: "typescript" })
op SayHello(@query name: string):
  | {
    message: string;
  }
  | BadRequestError
  | NotAuthorizedError
  | NotFoundError
  | InternalFailureError;
"
`;

exports[`type-safe-api rest typespec model generator > should generate model files > tspconfig.yaml 1`] = `
"emit:
  - "@typespec/openapi3"
options:
  "@typespec/openapi3":
    output-file: openapi.json

output-dir: '{cwd}/dist/apis/test-api-model/openapi'
"
`;
